{"ast":null,"code":"import { Environment } from '../environments/environment';\nimport { Subject, interval, merge, switchMap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ApiService = /*#__PURE__*/(() => {\n  class ApiService {\n    constructor(http) {\n      this.http = http;\n      this.serverEndpoint = `${Environment.apiUrl}`;\n      this.cartData$ = new Subject();\n      this.wishCountData$ = new Subject();\n      this.refreshInterval = 1000;\n      if (Environment.production) {\n        this.serverEndpoint = Environment.apiUrl;\n      }\n    }\n    /**\n     *\n     * @param endpoint\n     * @param data\n     * @param headers\n     */\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    post(endpoint, data, headers) {\n      return this.http.post(this.serverEndpoint + endpoint, data, headers);\n    }\n    /**\n     *\n     * @param endpoint\n     * @param params\n     */\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    get(endpoint, params) {\n      return this.http.get(this.serverEndpoint + endpoint, params);\n    }\n    liveprice() {\n      const endPoint = `/liveRateDB`;\n      // return this.http.get(this.serverEndpoint + endPoint),interval(this.refreshInterval);\n      return merge(this.http.get(this.serverEndpoint + endPoint), interval(this.refreshInterval).pipe(switchMap(() => this.http.get(this.serverEndpoint + endPoint))));\n    }\n    /**\n     *\n     * @param endpoint\n     * @param params\n     */\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    delete(endpoint, params) {\n      return this.http.delete(this.serverEndpoint + endpoint, params);\n    }\n    /**\n     *\n     * @param endpoint\n     * @param params\n     */\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    put(endpoint, params) {\n      return this.http.put(this.serverEndpoint + endpoint, params);\n    }\n    static #_ = this.ɵfac = function ApiService_Factory(t) {\n      return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ApiService,\n      factory: ApiService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return ApiService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}